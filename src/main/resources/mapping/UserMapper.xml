<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqcet.dao.UserMapper">

    <!-- 建立sql查询结果字段与实体属性的映射关系 -->
    <resultMap id="User" type="com.cqcet.entity.User">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="student_id" property="studentId"/>
        <result column="college" property="college"/>
        <result column="level" property="level"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP"  property="lastLoginTime"/>

        <result column="avatar" property="avatar"/>
        <result column="grade_id" property="groupId"/>
        <result column="group_name" property="groupName"/>
        <result column="professional_name" property="professionalName"/>
        <result column="professional_id" property="professionalId"/>
        <result column="college_name" property="collegeName"/>
    </resultMap>

    <!--查询全部用户-->
    <select id="listArticle" resultMap="User">
        SELECT
            ui.id,
            ui.password,
            ui.student_id,
            ui.college,
            ui.level,
            ui.register_time,
            ui.last_login_time,
            ui.username,
            info.avatar as avatar,
            ci.name as collegeName
        FROM
        user_info info,
        college_info ci,
        user ui
            WHERE
                info.grade_id = ci.id
                AND
                info.user_id = ui.id
        ORDER BY
            register_time
    </select>


    <select id="userList" resultMap="User">
        SELECT
        ui.id,
        ui.password,
        ui.student_id,
        ui.college,
        ui.level,
        ui.register_time,
        ui.last_login_time,
        ui.username,
        info.avatar as avatar,
        ci.name as collegeName
        FROM
        user_info info,
        college_info ci,
        user ui
        WHERE
        info.grade_id = ci.id
        AND
        info.user_id = ui.id
        <if test="keyWord!=null and keyWord!=''">AND ui.username LIKE #{keyWord}</if>
        ORDER BY
        register_time
    </select>


    <!-- 校验用户 -->
    <select id="checkUser" resultMap="User">
        SELECT
            u.id,
            u.username,
            u.password,
            u.register_time,
            u.last_login_time,
            u.student_id,
            u.level,
            u.status,
            ui.avatar
        FROM
            user u,
            user_info ui
        WHERE
            username = #{userName}
        <if test="passWord!=null and passWord!=''">AND password = #{passWord}</if>
            AND u.id = ui.user_id
    </select>


    <!--增加用户名和密码进行注册  -->
    <insert id="regist">
        INSERT
        INTO
            user
            (username, password, student_id, collage)
        VALUES
            (#{userName}, #{password}, #{studentId}, #{collage})
    </insert>

    <!-- 查询用户数量 -->
    <select id="countUser" resultType="int">
        SELECT
        COUNT(*)
        FROM
        user
        WHERE
        1=1
        <if test="username!=null and username!=''">AND username=#{username}</if>
        <if test="studentId!=null and studentId!=''">AND student_id=#{studentId}</if>
    </select>

    <!-- 添加新用户 -->
    <insert id="insert">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username!=null and username!=''">username,</if>
            <if test="studentId!=null and studentId!=''">student_id,</if>
            <if test="password!=null and password!=''">password,</if>
            <if test="college!=null and college!=''">college,</if>
            <if test="level!=null and level!=''">level,</if>
            <if test="registerTime!=null and registerTime!=''">register_time,</if>
            <if test="lastLoginTime!=null and lastLoginTime!=''">last_login_time,</if>
            <if test="status!=null and status!=''">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username!=null and username!=''">#{username},</if>
            <if test="studentId!=null and studentId!=''">#{studentId},</if>
            <if test="password!=null and password!=''">#{password},</if>
            <if test="college!=null and college!=''">#{college},</if>
            <if test="level!=null and level!=''">#{level},</if>
            <if test="registerTime!=null and registerTime!=''">#{registerTime},</if>
            <if test="lastLoginTime!=null and lastLoginTime!=''">#{lastLoginTime},</if>
            <if test="status!=null and status!=''">#{status},</if>
        </trim>
        <selectKey keyProperty="id" resultType="String">
            <!-- 得到刚insert到数据表中的记录的主键值，只适用于自增主键 -->
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <!-- 更新用户信息 -->
    <update id="update">
        UPDATE user
        <set>
            <if test="username!=null and username!=''">username=#{username},</if>
            <if test="studentId!=null and studentId!=''">student_id=#{studentId},</if>
            <if test="password!=null and password!=''">password=#{password},</if>
            <if test="college!=null and college!=''">college=#{college},</if>
            <if test="level!=null and level!=''">level=#{level},</if>
            <if test="registerTime!=null and registerTime!=''">register_time=#{registerTime},</if>
            <if test="lastLoginTime!=null and lastLoginTime!=''">last_login_time=#{lastLoginTime},</if>
            <if test="status!=null and status!=''">status=#{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!--查询指定用户组的数量-->
    <select id="countByGradeId" resultType="int">
        SELECT COUNT(*)
        FROM
            user
        WHERE
            level = #{level}
    </select>

    <!--查询该专业id是否在使用-->
    <select id="countByProfessionalIdArr" resultType="int">
        SELECT COUNT(*)
        FROM
            user
        WHERE
            college = #{professionalId}
    </select>
    <!-- 查询全部用户-->
    <select id="list" resultMap="User">
        SELECT
        u.id,
        u.username,
        u.register_time,
        u.student_id,
        ui.avatar,
        ug.name AS group_name,
        pi.name AS professional_name
        FROM
        user u,
        user_info ui,
        user_grade ug,
        professional_info pi
        WHERE
        u.status = #{status}
        AND u.id = ui.user_id
        AND ui.grade_id = ug.id
        AND ui.professional_id = pi.id
        <if test="groupId!=null and groupId!=''">
            AND ug.id = #{groupId}
        </if>
        <if test="keyword!=null and keyword!=''">
            AND u.username LIKE CONCAT('%', #{keyword}, '%')
        </if>
        ORDER BY
        u.register_time DESC
    </select>

    <!--根据主键查询用户信息-->
    <select id="selectById" resultMap="User">
        SELECT
            u.id,
            u.username,
            u.password,
            u.student_id,
            u.register_time,
            u.last_login_time,
            ui.avatar,
            ug.name AS groupName,
            ug.id   AS grade_id,
            pi.id   AS professional_id,
            pi.name   AS professionalName,
            u.college AS college
        FROM
            user u,
            user_info ui,
            user_grade ug,
            professional_info pi
        WHERE
            u.id = ui.user_id
            AND u.id = #{id}
            AND ui.grade_id = ug.id
            AND ui.professional_id = pi.id
    </select>
    <!--批量更新用户状态-->
    <update id="batchUpdate">
        UPDATE user
        <set>
            <if test="status!=null">status=#{status},</if>
        </set>
        WHERE id IN
        <foreach collection="idArr" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 根据旧密码，判断查询用户 -->
    <select id="selectByPassword" resultMap="User">
        SELECT
        *
        FROM
        user
        WHERE
        password = #{password}
        AND id = #{id}
    </select>

</mapper>